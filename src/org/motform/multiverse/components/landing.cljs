(ns org.motform.multiverse.components.landing
  (:require [clojure.string :as str]
            [re-frame.core :as rf]
            [org.motform.multiverse.routes :as routes]
            [org.motform.multiverse.util :as util]))

(defn elide [s n dots]
  (apply str (concat (take n s) (repeat dots ".") (drop (- (count s) n) s))))

(defn key-input-textarea [api-key validated?]
  [:textarea.key-input.shadow-medium.textarea-small.rounded.mono
   {:value        (if (< 10 (count api-key)) (elide api-key 3 16) api-key)
    :spell-check  false
    :class        (when validated? "key-valid")
    :on-change    #(rf/dispatch [:open-ai/update-api-key (.. % -target -value)])
    :on-key-down  #(when (= (.-key %) "Enter")
                     (.preventDefault %)
                     (if validated?
                       (rf/dispatch [:page/active :page/new-story])
                       (rf/dispatch [:open-ai/validate-api-key])))}])

(defn key-input []
  (let [{:open-ai/keys [api-key validated?]} @(rf/subscribe [:open-ai/key])]
    [:article.key-input-container.v-stack.gap-quarter.rounded-large.shadow-large.blurred.pad-3-4.border
     [:div.v-stack.gap-quarter
      [:label.offset-label "OpenAI API key"]
      [:div.h-stack.gap-half
       [key-input-textarea api-key validated?]
       [:button.open-ai-key-dispatch.rounded.shadow-small
        {:disabled (str/blank? api-key)
         :on-pointer-down #(when-not validated? (rf/dispatch [:open-ai/validate-api-key]))}
        (if @(rf/subscribe [:open-ai/pending-request?])
          [util/spinner-small]
          "Check")]]] 
     [:a {:href (when validated?
                  (routes/url-for (if (empty? @(rf/subscribe [:db/stories])) :page/new-story :page/library)))}
      [:button.open-ai-key-dispatch.rounded.shadow-small
       {:disabled (not validated?)
        :style {:width "100%"  :margin-top "var(--space-half)"}}
       "start"]]]))

(defn landing-blurb []
  [:section.landing-blurb.v-stack.gap-half
   [:h1 "Multiverse"]
   [:p "is a prototype system for interactive generative literature. It allows to user-reader to non-linearly explore a literary space generated by OpenAIâ€™s GPT family of machine learning langauge models. Read more "[:a {:href "https://motform.org/multiverse" :target "_blank"} "here"] "."]
   [:p "The system is requires an " [:a {:href "https://openai.com/api/" :target "_blank"} "OpenAI API key"] " to run. You will have to provide your own unless otherwise specified. All data is stored locally."]])

(defn landing []
  [:div.landing-container.h-stack.gap-double
   [landing-blurb]
   [key-input]])
